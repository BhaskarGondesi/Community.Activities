<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.inputFile="EncryptDecryptFile.xaml" this:Main.key_encryption="0591d56f0f600c7f" this:Main.DES_Encrypted_file="Files/DES_Encrypted_file.txt" this:Main.AES_Decrypted_file="Files/AES_Decrypted_file.txt" this:Main.DES_Decrypted_file="Files/DES_Decrypted_file.txt" this:Main.Rijndael_Encrypted_File="Files/Rijndael_Encrypted_File.txt" this:Main.Rijndael_Decrypted_File="Files/Rijndael_Decrypted_File.txt" this:Main.TripleDES_Encrypted_File="Files/TripleDES_Encrypted_File.txt" this:Main.TripleDES_Decrypted_File="Files/TripleDES_Decrypted_File.txt" this:Main.AES_Encrypted_file="Files/AES_Encrypted_file.txt" this:Main.RC_Decrypted_file="Files/RC_Decrypted_file.txt" this:Main.RC_Encrypted_file="Files/RC_Encrypted_file.txt" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Diagnostics;assembly=System.Private.CoreLib" xmlns:sd1="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Private.Xml.Linq" xmlns:this="clr-namespace:" xmlns:uca="clr-namespace:UiPath.Cryptography.Activities;assembly=UiPath.Cryptography.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="inputFile" Type="InArgument(x:String)" />
    <x:Property Name="key_encryption" Type="InArgument(x:String)" />
    <x:Property Name="DES_Encrypted_file" Type="InArgument(x:String)" />
    <x:Property Name="AES_Decrypted_file" Type="InArgument(x:String)" />
    <x:Property Name="DES_Decrypted_file" Type="InArgument(x:String)" />
    <x:Property Name="Rijndael_Encrypted_File" Type="InArgument(x:String)" />
    <x:Property Name="Rijndael_Decrypted_File" Type="InArgument(x:String)" />
    <x:Property Name="TripleDES_Encrypted_File" Type="InArgument(x:String)" />
    <x:Property Name="TripleDES_Decrypted_File" Type="InArgument(x:String)" />
    <x:Property Name="AES_Encrypted_file" Type="InArgument(x:String)" />
    <x:Property Name="RC_Decrypted_file" Type="InArgument(x:String)" />
    <x:Property Name="RC_Encrypted_file" Type="InArgument(x:String)" />
    <x:Property Name="XmlPath" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1020,999.2</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Cryptography</x:String>
      <x:String>System.Text</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>UiPath.Cryptography.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Diagnostics.TraceSource</AssemblyReference>
      <AssemblyReference>System.Diagnostics.FileVersionInfo</AssemblyReference>
      <AssemblyReference>System.Diagnostics.EventLog</AssemblyReference>
      <AssemblyReference>System.Diagnostics.Process</AssemblyReference>
      <AssemblyReference>System.Diagnostics.DiagnosticSource</AssemblyReference>
      <AssemblyReference>System.Diagnostics.StackTrace</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>Microsoft.PowerShell.Commands.Diagnostics</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="375.2,934.4" sap2010:WorkflowViewState.IdRef="Sequence_9">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Name="CompareResult" />
      <Variable x:TypeArguments="sd1:DataTable" Name="DataTable" />
      <Variable x:TypeArguments="x:String" Default="UiPath.Cryptography.Activities" Name="PackageName" />
      <Variable x:TypeArguments="x:String" Name="PackageVersion" />
      <Variable x:TypeArguments="x:String" Name="Project_Dependencies" />
      <Variable x:TypeArguments="sd:Stopwatch" Default="[new Stopwatch()]" Name="stw" />
      <Variable x:TypeArguments="x:String" Name="XmlPathVar">
        <Variable.Default>
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="XmlPath" />
        </Variable.Default>
      </Variable>
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:BuildDataTable DataTable="[DataTable]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Test&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;500&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;time&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;500&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Result&quot; msdata:Caption=&quot;&quot; type=&quot;xs:boolean&quot; default=&quot;true&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;ErrorMessage&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;50000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;ExceptionType&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;5000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
    <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_6">
      <Assign.To>
        <OutArgument x:TypeArguments="sd:Stopwatch">[stw]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="sd:Stopwatch">[new Stopwatch()]</InArgument>
      </Assign.Value>
    </Assign>
    <TryCatch DisplayName="Try Catch Encrypt/Decrypt/Test File AES" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Sequence DisplayName="Encrypt/Decrypt/Test File AES" sap:VirtualizedContainerService.HintSize="376,1119.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="DecryptedStringOut" />
            <Variable x:TypeArguments="x:String" Name="StringOut" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <InvokeMethod DisplayName="Invoke method" sap:VirtualizedContainerService.HintSize="334.4,133.6" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Start">
            <InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="sd:Stopwatch">[stw]</InArgument>
            </InvokeMethod.TargetObject>
          </InvokeMethod>
          <uca:EncryptFile KeySecureString="{x:Null}" Algorithm="AES" DisplayName="Encrypt File" sap:VirtualizedContainerService.HintSize="334.4,129.6" sap2010:WorkflowViewState.IdRef="EncryptFile_1" InputFilePath="[inputFile]" Key="[key_encryption]" KeyEncoding="[System.Text.Encoding.UTF8]" KeyInputModeSwitch="Key" OutputFilePath="[AES_Encrypted_file]" Overwrite="True">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </uca:EncryptFile>
          <uca:DecryptFile KeySecureString="{x:Null}" Algorithm="AES" DisplayName="Decrypt File" sap:VirtualizedContainerService.HintSize="334.4,129.6" sap2010:WorkflowViewState.IdRef="DecryptFile_1" InputFilePath="[AES_Encrypted_file]" Key="[key_encryption]" KeyEncoding="[System.Text.Encoding.UTF8]" KeyInputModeSwitch="Key" OutputFilePath="[AES_Decrypted_File]" Overwrite="True">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </uca:DecryptFile>
          <ui:InvokeCode ContinueOnError="{x:Null}" Code="SReader = New StreamReader(source)&#xA;StringOutput= SReader.ReadToEnd()&#xA;SReader.Close()" DisplayName="Read Original File" sap:VirtualizedContainerService.HintSize="334.4,52.8" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
            <ui:InvokeCode.Arguments>
              <InOutArgument x:TypeArguments="si:StreamReader" x:Key="SReader" />
              <InArgument x:TypeArguments="x:String" x:Key="source">[inputFile]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="StringOutput">[StringOut]</OutArgument>
            </ui:InvokeCode.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeCode>
          <ui:InvokeCode ContinueOnError="{x:Null}" Code="SReader = New StreamReader(source)&#xA;StringOutput= SReader.ReadToEnd()&#xA;SReader.Close()" DisplayName="Read Decrypted File" sap:VirtualizedContainerService.HintSize="334.4,52.8" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
            <ui:InvokeCode.Arguments>
              <InOutArgument x:TypeArguments="si:StreamReader" x:Key="SReader" />
              <InArgument x:TypeArguments="x:String" x:Key="source">[AES_Decrypted_File]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="StringOutput">[DecryptedStringOut]</OutArgument>
            </ui:InvokeCode.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeCode>
          <ui:InvokeCode ContinueOnError="{x:Null}" Code="CompareResult=String.Compare(StringA, StringB)&#xA;" DisplayName="Compare Original/Decrypted" sap:VirtualizedContainerService.HintSize="334.4,52.8" sap2010:WorkflowViewState.IdRef="InvokeCode_3">
            <ui:InvokeCode.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="StringA">[StringOut]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="StringB">[DecryptedStringOut]</InArgument>
              <OutArgument x:TypeArguments="x:Int32" x:Key="CompareResult">[CompareResult]</OutArgument>
            </ui:InvokeCode.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeCode>
          <WriteLine DisplayName="Write Line Compare Result" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[CompareResult.ToString]" />
          <InvokeMethod DisplayName="Invoke method" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Stop">
            <InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="sd:Stopwatch">[stw]</InArgument>
            </InvokeMethod.TargetObject>
          </InvokeMethod>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <TryCatch DisplayName="Try Catch Encrypt/Decrypt/Test File DES" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="TryCatch_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Sequence DisplayName="Encrypt/Decrypt/Test File DES" sap:VirtualizedContainerService.HintSize="376,1255" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="DecryptedStringOut" />
            <Variable x:TypeArguments="x:String" Name="StringOut" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <InvokeMethod DisplayName="Invoke method" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="Restart">
            <InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="sd:Stopwatch">[stw]</InArgument>
            </InvokeMethod.TargetObject>
          </InvokeMethod>
          <uca:EncryptFile KeySecureString="{x:Null}" Algorithm="DES" DisplayName="Encrypt File" sap:VirtualizedContainerService.HintSize="334,128" sap2010:WorkflowViewState.IdRef="EncryptFile_2" InputFilePath="[inputFile]" Key="[key_encryption]" KeyEncoding="[System.Text.Encoding.UTF8]" KeyInputModeSwitch="Key" OutputFilePath="[DES_Encrypted_File]" Overwrite="True">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </uca:EncryptFile>
          <uca:DecryptFile KeySecureString="{x:Null}" Algorithm="DES" DisplayName="Decrypt File" sap:VirtualizedContainerService.HintSize="334,128" sap2010:WorkflowViewState.IdRef="DecryptFile_2" InputFilePath="[DES_Encrypted_File]" Key="[key_encryption]" KeyEncoding="[System.Text.Encoding.UTF8]" KeyInputModeSwitch="Key" OutputFilePath="[DES_Decrypted_File]" Overwrite="True">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </uca:DecryptFile>
          <ui:InvokeCode ContinueOnError="{x:Null}" Code="SReader = New StreamReader(source)&#xA;StringOutput= SReader.ReadToEnd()&#xA;SReader.Close()" DisplayName="Read Original File" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="InvokeCode_4">
            <ui:InvokeCode.Arguments>
              <InOutArgument x:TypeArguments="si:StreamReader" x:Key="SReader" />
              <InArgument x:TypeArguments="x:String" x:Key="source">[inputFile]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="StringOutput">[StringOut]</OutArgument>
            </ui:InvokeCode.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeCode>
          <ui:InvokeCode ContinueOnError="{x:Null}" Code="SReader = New StreamReader(source)&#xA;StringOutput= SReader.ReadToEnd()&#xA;SReader.Close()" DisplayName="Read Decrypted File" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_5">
            <ui:InvokeCode.Arguments>
              <InOutArgument x:TypeArguments="si:StreamReader" x:Key="SReader" />
              <InArgument x:TypeArguments="x:String" x:Key="source">[DES_Decrypted_File]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="StringOutput">[DecryptedStringOut]</OutArgument>
            </ui:InvokeCode.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeCode>
          <ui:InvokeCode ContinueOnError="{x:Null}" Code="CompareResult=String.Compare(StringA, StringB)&#xA;" DisplayName="Compare Original/Decrypted" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="InvokeCode_6">
            <ui:InvokeCode.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="StringA">[StringOut]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="StringB">[DecryptedStringOut]</InArgument>
              <OutArgument x:TypeArguments="x:Int32" x:Key="CompareResult">[CompareResult]</OutArgument>
            </ui:InvokeCode.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeCode>
          <WriteLine DisplayName="Write Line Compare Result" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[CompareResult.ToString]" />
          <InvokeMethod DisplayName="Invoke method" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" MethodName="Stop">
            <InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="sd:Stopwatch">[stw]</InArgument>
            </InvokeMethod.TargetObject>
          </InvokeMethod>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <TryCatch DisplayName="Try Catch Encrypt/Decrypt/Test File RC2 (Non-FIPS)" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="TryCatch_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Sequence DisplayName="Encrypt/Decrypt/Test File RC2 (Non-FIPS)" sap:VirtualizedContainerService.HintSize="376,1142" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="DecryptedStringOut" />
            <Variable x:TypeArguments="x:String" Name="StringOut" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <InvokeMethod DisplayName="Invoke method" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_5" MethodName="Restart">
            <InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="sd:Stopwatch">[stw]</InArgument>
            </InvokeMethod.TargetObject>
          </InvokeMethod>
          <uca:EncryptFile KeySecureString="{x:Null}" Algorithm="RC2" DisplayName="Encrypt File" sap:VirtualizedContainerService.HintSize="334,128" sap2010:WorkflowViewState.IdRef="EncryptFile_3" InputFilePath="[inputFile]" Key="[key_encryption]" KeyEncoding="[System.Text.Encoding.UTF8]" KeyInputModeSwitch="Key" OutputFilePath="[RC_Encrypted_file]" Overwrite="True">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </uca:EncryptFile>
          <uca:DecryptFile KeySecureString="{x:Null}" Algorithm="RC2" DisplayName="Decrypt File" sap:VirtualizedContainerService.HintSize="334,128" sap2010:WorkflowViewState.IdRef="DecryptFile_3" InputFilePath="[RC_Encrypted_file]" Key="[key_encryption]" KeyEncoding="[System.Text.Encoding.UTF8]" KeyInputModeSwitch="Key" OutputFilePath="[RC_Decrypted_File]" Overwrite="True">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </uca:DecryptFile>
          <ui:InvokeCode ContinueOnError="{x:Null}" Code="SReader = New StreamReader(source)&#xA;StringOutput= SReader.ReadToEnd()&#xA;SReader.Close()" DisplayName="Read Original File" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="InvokeCode_7">
            <ui:InvokeCode.Arguments>
              <InOutArgument x:TypeArguments="si:StreamReader" x:Key="SReader" />
              <InArgument x:TypeArguments="x:String" x:Key="source">[inputFile]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="StringOutput">[StringOut]</OutArgument>
            </ui:InvokeCode.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeCode>
          <ui:InvokeCode ContinueOnError="{x:Null}" Code="SReader = New StreamReader(source)&#xA;StringOutput= SReader.ReadToEnd()&#xA;SReader.Close()" DisplayName="Read Decrypted File" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="InvokeCode_8">
            <ui:InvokeCode.Arguments>
              <InOutArgument x:TypeArguments="si:StreamReader" x:Key="SReader" />
              <InArgument x:TypeArguments="x:String" x:Key="source">[RC_Decrypted_File]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="StringOutput">[DecryptedStringOut]</OutArgument>
            </ui:InvokeCode.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeCode>
          <ui:InvokeCode ContinueOnError="{x:Null}" Code="CompareResult=String.Compare(StringA, StringB)&#xA;" DisplayName="Compare Original/Decrypted" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="InvokeCode_9">
            <ui:InvokeCode.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="StringA">[StringOut]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="StringB">[DecryptedStringOut]</InArgument>
              <OutArgument x:TypeArguments="x:Int32" x:Key="CompareResult">[CompareResult]</OutArgument>
            </ui:InvokeCode.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeCode>
          <WriteLine DisplayName="Write Line Compare Result" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="[CompareResult.ToString]" />
          <InvokeMethod DisplayName="Invoke method" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_6" MethodName="Stop">
            <InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="sd:Stopwatch">[stw]</InArgument>
            </InvokeMethod.TargetObject>
          </InvokeMethod>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,104" sap2010:WorkflowViewState.IdRef="Catch`1_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <TryCatch DisplayName="Try Catch Encrypt/Decrypt/Test File Rijndael (Non-FIPS)" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="TryCatch_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Sequence DisplayName="Encrypt/Decrypt/Test File Rijndael (Non-FIPS)" sap:VirtualizedContainerService.HintSize="376,1142" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="DecryptedStringOut" />
            <Variable x:TypeArguments="x:String" Name="StringOut" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <InvokeMethod DisplayName="Invoke method" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_7" MethodName="Restart">
            <InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="sd:Stopwatch">[stw]</InArgument>
            </InvokeMethod.TargetObject>
          </InvokeMethod>
          <uca:EncryptFile KeySecureString="{x:Null}" Algorithm="Rijndael" DisplayName="Encrypt File" sap:VirtualizedContainerService.HintSize="334,128" sap2010:WorkflowViewState.IdRef="EncryptFile_4" InputFilePath="[inputFile]" Key="[key_encryption]" KeyEncoding="[System.Text.Encoding.UTF8]" KeyInputModeSwitch="Key" OutputFilePath="[Rijndael_Encrypted_File]" Overwrite="True">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </uca:EncryptFile>
          <uca:DecryptFile KeySecureString="{x:Null}" Algorithm="Rijndael" DisplayName="Decrypt File" sap:VirtualizedContainerService.HintSize="334,128" sap2010:WorkflowViewState.IdRef="DecryptFile_4" InputFilePath="[Rijndael_Encrypted_File]" Key="[key_encryption]" KeyEncoding="[System.Text.Encoding.UTF8]" KeyInputModeSwitch="Key" OutputFilePath="[Rijndael_Decrypted_File]" Overwrite="True">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </uca:DecryptFile>
          <ui:InvokeCode ContinueOnError="{x:Null}" Code="SReader = New StreamReader(source)&#xA;StringOutput= SReader.ReadToEnd()&#xA;SReader.Close()" DisplayName="Read Original File" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="InvokeCode_10">
            <ui:InvokeCode.Arguments>
              <InOutArgument x:TypeArguments="si:StreamReader" x:Key="SReader" />
              <InArgument x:TypeArguments="x:String" x:Key="source">[inputFile]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="StringOutput">[StringOut]</OutArgument>
            </ui:InvokeCode.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeCode>
          <ui:InvokeCode ContinueOnError="{x:Null}" Code="SReader = New StreamReader(source)&#xA;StringOutput= SReader.ReadToEnd()&#xA;SReader.Close()" DisplayName="Read Decrypted File" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="InvokeCode_11">
            <ui:InvokeCode.Arguments>
              <InOutArgument x:TypeArguments="si:StreamReader" x:Key="SReader" />
              <InArgument x:TypeArguments="x:String" x:Key="source">[Rijndael_Decrypted_File]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="StringOutput">[DecryptedStringOut]</OutArgument>
            </ui:InvokeCode.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeCode>
          <ui:InvokeCode ContinueOnError="{x:Null}" Code="CompareResult=String.Compare(StringA, StringB)&#xA;" DisplayName="Compare Original/Decrypted" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="InvokeCode_12">
            <ui:InvokeCode.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="StringA">[StringOut]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="StringB">[DecryptedStringOut]</InArgument>
              <OutArgument x:TypeArguments="x:Int32" x:Key="CompareResult">[CompareResult]</OutArgument>
            </ui:InvokeCode.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeCode>
          <WriteLine DisplayName="Write Line Compare Result" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="[CompareResult.ToString]" />
          <InvokeMethod DisplayName="Invoke method" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_8" MethodName="Stop">
            <InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="sd:Stopwatch">[stw]</InArgument>
            </InvokeMethod.TargetObject>
          </InvokeMethod>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,104" sap2010:WorkflowViewState.IdRef="Catch`1_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <TryCatch DisplayName="Try Catch Encrypt/Decrypt/Test File TripleDES" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="TryCatch_5">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Sequence DisplayName="Encrypt/Decrypt/Test File TripleDES" sap:VirtualizedContainerService.HintSize="280,988" sap2010:WorkflowViewState.IdRef="Sequence_5">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="DecryptedStringOut" />
            <Variable x:TypeArguments="x:String" Name="StringOut" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <InvokeMethod DisplayName="Invoke method" sap:VirtualizedContainerService.HintSize="238,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_9" MethodName="Restart">
            <InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="sd:Stopwatch">[stw]</InArgument>
            </InvokeMethod.TargetObject>
          </InvokeMethod>
          <uca:EncryptFile KeySecureString="{x:Null}" Algorithm="TripleDES" DisplayName="Encrypt File" sap:VirtualizedContainerService.HintSize="238,51" sap2010:WorkflowViewState.IdRef="EncryptFile_5" InputFilePath="[inputFile]" Key="[key_encryption]" KeyEncoding="[System.Text.Encoding.UTF8]" KeyInputModeSwitch="Key" OutputFilePath="[TripleDES_Encrypted_File]" Overwrite="True">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </uca:EncryptFile>
          <uca:DecryptFile KeySecureString="{x:Null}" Algorithm="TripleDES" DisplayName="Decrypt File" sap:VirtualizedContainerService.HintSize="238,51" sap2010:WorkflowViewState.IdRef="DecryptFile_5" InputFilePath="[TripleDES_Encrypted_File]" Key="[key_encryption]" KeyEncoding="[System.Text.Encoding.UTF8]" KeyInputModeSwitch="Key" OutputFilePath="[TripleDES_Decrypted_File]" Overwrite="True">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </uca:DecryptFile>
          <ui:InvokeCode ContinueOnError="{x:Null}" Code="SReader = New StreamReader(source)&#xA;StringOutput= SReader.ReadToEnd()&#xA;SReader.Close()" DisplayName="Read Original File" sap:VirtualizedContainerService.HintSize="238,51" sap2010:WorkflowViewState.IdRef="InvokeCode_13">
            <ui:InvokeCode.Arguments>
              <InOutArgument x:TypeArguments="si:StreamReader" x:Key="SReader" />
              <InArgument x:TypeArguments="x:String" x:Key="source">[inputFile]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="StringOutput">[StringOut]</OutArgument>
            </ui:InvokeCode.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeCode>
          <ui:InvokeCode ContinueOnError="{x:Null}" Code="SReader = New StreamReader(source)&#xA;StringOutput= SReader.ReadToEnd()&#xA;SReader.Close()" DisplayName="Read Decrypted File" sap:VirtualizedContainerService.HintSize="238,51" sap2010:WorkflowViewState.IdRef="InvokeCode_14">
            <ui:InvokeCode.Arguments>
              <InOutArgument x:TypeArguments="si:StreamReader" x:Key="SReader" />
              <InArgument x:TypeArguments="x:String" x:Key="source">[TripleDES_Decrypted_File]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="StringOutput">[DecryptedStringOut]</OutArgument>
            </ui:InvokeCode.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeCode>
          <ui:InvokeCode ContinueOnError="{x:Null}" Code="CompareResult=String.Compare(StringA, StringB)&#xA;" DisplayName="Compare Original/Decrypted" sap:VirtualizedContainerService.HintSize="238,51" sap2010:WorkflowViewState.IdRef="InvokeCode_15">
            <ui:InvokeCode.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="StringA">[StringOut]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="StringB">[DecryptedStringOut]</InArgument>
              <OutArgument x:TypeArguments="x:Int32" x:Key="CompareResult">[CompareResult]</OutArgument>
            </ui:InvokeCode.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeCode>
          <WriteLine DisplayName="Write Line Compare Result" sap:VirtualizedContainerService.HintSize="238,61" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="[CompareResult.ToString]" />
          <InvokeMethod DisplayName="Invoke method" sap:VirtualizedContainerService.HintSize="238,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_10" MethodName="Stop">
            <InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="sd:Stopwatch">[stw]</InArgument>
            </InvokeMethod.TargetObject>
          </InvokeMethod>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,104" sap2010:WorkflowViewState.IdRef="Catch`1_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <Sequence DisplayName="Deserialize JSON and get Activity version" sap:VirtualizedContainerService.HintSize="333.6,68.8" sap2010:WorkflowViewState.IdRef="Sequence_6">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="Text_ProjectConfig" />
        <Variable x:TypeArguments="njl:JObject" Name="JsonObject_Output" />
        <Variable x:TypeArguments="njl:JObject" Name="Project_depDes" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ReadTextFile sap2010:Annotation.AnnotationText="Reads the project.json file to a variable that we can parse though line by line.  Note it has to be Deserialized first as it is a JSON formatted file.  If you do not already have it click manage packages and add the UiPath.Web.Activities to your project." Content="[Text_ProjectConfig]" DisplayName="Read Text File" FileName="project.json" sap:VirtualizedContainerService.HintSize="384,151" sap2010:WorkflowViewState.IdRef="ReadTextFile_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ReadTextFile>
      <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="384,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1" JsonObject="[JsonObject_Output]" JsonString="[Text_ProjectConfig]" />
      <Assign sap:VirtualizedContainerService.HintSize="384,60" sap2010:WorkflowViewState.IdRef="Assign_2">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[Project_Dependencies]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[JsonObject_Output.SelectToken("dependencies").ToString]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="384,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_2" JsonObject="[Project_depDes]" JsonString="[Project_Dependencies]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:DeserializeJson>
      <Assign sap:VirtualizedContainerService.HintSize="384,60" sap2010:WorkflowViewState.IdRef="Assign_3">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[PackageVersion]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Project_depDes("UiPath.Cryptography.Activities").ToString]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <Sequence DisplayName="XML Conversion" sap:VirtualizedContainerService.HintSize="450.4,938.4" sap2010:WorkflowViewState.IdRef="Sequence_8">
      <Sequence.Variables>
        <Variable x:TypeArguments="sxl:XElement" Name="xmlRows" />
        <Variable x:TypeArguments="sxl:XElement" Name="xmlDocument" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="408.8,60" sap2010:WorkflowViewState.IdRef="Assign_4">
        <Assign.To>
          <OutArgument x:TypeArguments="sxl:XElement">[xmlDocument]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="sxl:XElement">[New XElement("testsuites", New XAttribute("time",DateTime.Now.ToString))]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="408.8,60" sap2010:WorkflowViewState.IdRef="Assign_5">
        <Assign.To>
          <OutArgument x:TypeArguments="sxl:XElement">[xmlRows]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="sxl:XElement">[new XElement("testsuite")]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[DataTable]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="408.8,378.4" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd1:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd1:DataRow" Name="row" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="375.2,257.6" sap2010:WorkflowViewState.IdRef="Sequence_7">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeCode ContinueOnError="{x:Null}" Code="If( CBool(rowEl.Item(&quot;Result&quot;)) = True)&#xA;&#x9;xmlRow.Add (New XElement(&quot;testcase&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;New XAttribute(&quot;classname&quot;, Package +&quot; &quot;+PackageVersion),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;New XAttribute(&quot;name&quot;,Package +&quot; &quot;+PackageVersion+&quot; &quot;+rowEl.Item(&quot;Test&quot;).ToString()),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;New XAttribute(&quot;time&quot;, rowEl.Item(&quot;time&quot;))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; )&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  )&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Else &#xA;&#x9;&#x9;xmlRow.Add (New XElement(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;testcase&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;New XAttribute(&quot;classname&quot;, Package + &quot; &quot; + PackageVersion),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;New XAttribute(&quot;name&quot;, Package +&quot; &quot;+PackageVersion+&quot; &quot;+ rowEl.Item(&quot;Test&quot;).ToString()),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;New XAttribute(&quot;time&quot;, rowEl.Item(&quot;time&quot;)),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;New XElement(&quot;failure&quot;,rowEl.Item(&quot;ErrorMessage&quot;).ToString(),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;New XAttribute(&quot;type&quot;, rowEl.Item(&quot;ExceptionType&quot;).ToString())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)))&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;End If" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="333.6,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_16">
                <ui:InvokeCode.Arguments>
                  <InOutArgument x:TypeArguments="sxl:XElement" x:Key="xmlRow">[xmlRows]</InOutArgument>
                  <InArgument x:TypeArguments="sd1:DataRow" x:Key="rowEl">[row]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="Package">[PackageName]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="PackageVersion">[PackageVersion]</InArgument>
                </ui:InvokeCode.Arguments>
              </ui:InvokeCode>
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEachRow>
      <ui:InvokeCode ContinueOnError="{x:Null}" Code="doc.Add(row)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="408.8,52.8" sap2010:WorkflowViewState.IdRef="InvokeCode_17">
        <ui:InvokeCode.Arguments>
          <InArgument x:TypeArguments="sxl:XElement" x:Key="row">[xmlRows]</InArgument>
          <InOutArgument x:TypeArguments="sxl:XElement" x:Key="doc">[xmlDocument]</InOutArgument>
        </ui:InvokeCode.Arguments>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InvokeCode>
      <ui:WriteTextFile DisplayName="Write Text File" FileName="[XmlPathVar+&quot;junit_EncryptDecryptFile.xml&quot;]" sap:VirtualizedContainerService.HintSize="408.8,134.4" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[&quot;&lt;?xml version=&quot;&quot;1.0&quot;&quot; encoding=&quot;&quot;UTF-8&quot;&quot;?&gt;&quot; + Environment.NewLine +&#xA;xmldocument.ToString()]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:WriteTextFile>
    </Sequence>
  </Sequence>
</Activity>