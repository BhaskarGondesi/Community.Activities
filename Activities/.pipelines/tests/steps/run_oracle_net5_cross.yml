parameters:
  - name: buildPipeline
    type: string
  - name: packagesFolder
    type: string
  - name: studioInstallPath
    type: string
  - name: uipathTestDirectory
    type: string
  - name: ODBC_db_connStr
    type: string
  - name: ODBC_db_provider
    type: string
    default: "'System.Data.Odbc'"
  - name: ODBC_managed_connStr
    type: string
  - name: ODBC_managed_provider
    type: string
    default: "'Oracle.ManagedDataAccess.Client'"


steps:
  #  - task: DownloadPipelineArtifact@2
  #    displayName: Download artifact from build pipeline
  #    inputs:
  #     source: 'specific'
  #     project: 'Community'
  #     pipeline: ${{ parameters.buildPipeline }}
  #     runVersion: 'latest'
  #     path: ${{ parameters.packagesFolder }}

  #  - task: PowerShell@2
  #    displayName: Copy Oracle Client on agent
  #    inputs:
  #     targetType: 'inline'
  #     ignoreLASTEXITCODE: true
  #     script: |
  #      mkdir d:\oracle
  #      mkdir d:\ora_temp
  #      Copy-Item "$(Build.SourcesDirectory)\Activities\Tests\Setup\instantclient_19_8.zip" -Destination "d:\ora_temp"
  #      Expand-Archive -LiteralPath 'd:\ora_temp\instantclient_19_8.zip' -DestinationPath 'd:\oracle'
  #      ((Get-Content -path $(Build.SourcesDirectory)\Activities\Tests\Setup\tnsnames.ora -Raw) -replace '##IP##', $env:oraclePublicIP) | Set-Content -Path $(Build.SourcesDirectory)\Activities\Tests\Setup\tnsnames.ora
  #      Copy-Item "$(Build.SourcesDirectory)\Activities\Tests\Setup\tnsnames.ora" -Destination "d:\oracle\network\admin\tnsnames.ora" -Force

  #  - task: PowerShell@2
  #    displayName: Install Oracle Client on agent
  #    inputs:
  #     targetType: 'inline'
  #     ignoreLASTEXITCODE: true
  #     script: |
  #      cd d:\oracle
  #      .\odbc_install.exe
  #      cd d:\oracle\odp.net\managed\x86
  #      .\configure.bat true true
   
  #  - task: PowerShell@2
  #    displayName: Add custom Oracle DSN
  #    inputs:
  #     targetType: 'inline'
  #     ignoreLASTEXITCODE: true
  #     script: |
  #       Get-OdbcDriver
  #       Add-OdbcDsn -Name "TestDB" -DriverName "Oracle in oracle" -Platform "32-bit" -DsnType "User" -SetPropertyValue @("SERVER=TestDB")

   - task: PowerShell@2
     displayName: Update Nuget Packages from UiPath Dev
     inputs:
      targetType: 'inline'
      ignoreLASTEXITCODE: true
      script: |
        cd ${{ parameters.packagesFolder }}
        $file = Get-ChildItem -Path .\ -Filter *.nupkg -Recurse -File -Name -Exclude *symbols*
        $dot = $file.LastIndexof('.')
        $file = $file.Replace(".nupkg","")
        $act = $file.LastIndexof('Activities.')
        $version = $file.Substring($act+11)
        Write-Host Update to version $version
        Write-Host "##vso[build.updatebuildnumber]$version"

        $projectPath = "$(uipathTestDirectory)\NET_5_Cross\DatabaseODBCCross"
        mkdir -p $projectPath\XmlFiles

        cd ${{ parameters.studioInstallPath }}
        .\UiPath.Studio.CommandLine.exe manage --project-path "$projectPath\project.json" --add-ref "UiPath.Database.Activities|$version|strict" 
        dir "$projectPath\"

        Write-Host Publish project to folder $projectPath
        .\UiPath.Studio.CommandLine.exe publish --project-path "$projectPath\project.json" --target Custom --feed "$projectPath\" -v "$version"
        dir "$projectPath\"

        Write-Host Run nupkg file 
        .\uirobot.exe execute --file "$projectPath\DatabaseODBCCross.$version.nupkg" --input "{'XmlPath':'d:\\teste\\NET_5_Cross\\DatabaseODBCCross\\XmlFiles\\'}"

        cd $projectPath\
        dir "$projectPath\"
        dir "$projectPath\XmlFiles\"

        Write-Host Copy item "$projectPath\XmlFiles\"
        Copy-Item "$projectPath\XmlFiles\junit*.xml" -Destination "$(Build.ArtifactStagingDirectory)\junit_DatabaseODBCCross.xml"

        Write-Host Remove item "$projectPath\XmlFiles\"
        Remove-Item "$projectPath\XmlFiles\junit*.xml"
   - task: PublishBuildArtifacts@1
     displayName: "Publish test files as Artifacts"
     inputs:
       PathtoPublish:  '$(Build.ArtifactStagingDirectory)'
       ArtifactName:   'Oracle Integration Tests for $(Build.BuildNumber)'
       ArtifactType:   'Container'

   - task: PublishTestResults@2
     displayName: "Publish test results as Test Runs output"
     inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: 'junit*.xml'
        searchFolder: '$(Build.ArtifactStagingDirectory)'
        testRunTitle: 'Oracle Integration Tests for $(Build.BuildNumber)'