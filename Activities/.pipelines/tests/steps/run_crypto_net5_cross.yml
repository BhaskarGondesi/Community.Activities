parameters:
  - name: buildPipeline
    type: string
  - name: packagesFolder
    type: string
  - name: studioInstallPath
    type: string
  - name: uipathTestDirectory
    type: string
  - name: AES_Decrypted_file
    type: string
  - name: AES_Encrypted_file
    type: string
  - name: DES_Decrypted_file
    type: string
  - name: DES_Encrypted_file
    type: string
  - name: InputFile_EncryptDecriptFile
    type: string
  - name: InputFile_HashFile
    type: string
  - name: InputFile_HashFileWithKey
    type: string
  - name: Key_Encryption
    type: string
  - name: RC_Decrypted_file
    type: string
  - name: RC_Encrypted_file
    type: string
  - name: Rijndael_Decrypted_File
    type: string
  - name: Rijndael_Encrypted_File
    type: string
  - name: Text_to_Encrypt
    type: string
  - name: TripleDES_Decrypted_File
    type: string
  - name: TripleDES_Encrypted_File
    type: string

steps:
   - task: DownloadPipelineArtifact@2
     displayName: Download artifact from build pipeline
     inputs:
      source: 'specific'
      project: 'Community'
      pipeline: ${{ parameters.buildPipeline }}
      runVersion: 'latest'
      path: ${{ parameters.packagesFolder }}

   - task: PowerShell@2
     displayName: Update Nuget Packages from UiPath Dev
     inputs:
      targetType: 'inline'
      ignoreLASTEXITCODE: true
      script: |
        cd ${{ parameters.packagesFolder }}
        $file = Get-ChildItem -Path .\ -Filter *.nupkg -Recurse -File -Name -Exclude *symbols*
        $dot = $file.LastIndexof('.')
        $file = $file.Replace(".nupkg","")
        $act = $file.LastIndexof('Activities.')
        $version = $file.Substring($act+11)
        Write-Host Update to version $version
        Write-Host "##vso[build.updatebuildnumber]$version"

        $projectPath = "$(uipathTestDirectory)\NET_5_Cross\CryptographyNet5Cross"
        mkdir -p $projectPath\XmlFiles

        cd ${{ parameters.studioInstallPath }}
        .\UiPath.Studio.CommandLine.exe manage --project-path "$projectPath\project.json" --add-ref "UiPath.Cryptography.Activities|$version|strict" 
        dir "$projectPath\"

        Write-Host Publish project to folder $projectPath
        .\UiPath.Studio.CommandLine.exe publish --project-path "$projectPath\project.json" --target Custom --feed "$projectPath\" -v "$version"
        dir "$projectPath\"

        Write-Host Run nupkg file 
        d:\robot\uirobot.exe execute --file "$projectPath\CryptographyNet5Cross.$version.nupkg" --input "{'XmlPath':'d:\\teste\\NET_5_Cross\\CryptographyNet5Cross\\XmlFiles\\'}"

        cd $projectPath\
        dir "$projectPath\"
        dir "$projectPath\XmlFiles\"

        Write-Host Copy item "$projectPath\XmlFiles\"
        Copy-Item "$projectPath\XmlFiles\junit*.xml" -Destination "$(Build.ArtifactStagingDirectory)\junit_Cryptography_NET_5_Cross.xml"

        Write-Host Remove item "$projectPath\XmlFiles\"
        Remove-Item "$projectPath\XmlFiles\junit*.xml"

   - task: PublishBuildArtifacts@1
     displayName: "Publish test files as Artifacts"
     inputs:
       PathtoPublish:  '$(Build.ArtifactStagingDirectory)'
       ArtifactName:   'Cryptography Integration Tests for $(Build.BuildNumber)'
       ArtifactType:   'Container'

   - task: PublishTestResults@2
     displayName: "Publish test results as Test Runs output"
     inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: 'junit*.xml'
        searchFolder: '$(Build.ArtifactStagingDirectory)'
        testRunTitle: 'Cryptography Integration Tests for $(Build.BuildNumber)'