//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UiPath.Scripting.Activities.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class UiPath_Scripting_Activities {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal UiPath_Scripting_Activities() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("UiPath.Scripting.Activities.Properties.UiPath.Scripting.Activities", typeof(UiPath_Scripting_Activities).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execute a PowerShell Core command.
        /// </summary>
        public static string Activity_ExecutePowerShellCore_Description {
            get {
                return ResourceManager.GetString("Activity_ExecutePowerShellCore_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execute Power Shell Core.
        /// </summary>
        public static string Activity_ExecutePowerShellCore_Name {
            get {
                return ResourceManager.GetString("Activity_ExecutePowerShellCore_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The PowerShell command that is to be executed..
        /// </summary>
        public static string Activity_ExecutePowerShellCore_Property_CommandText_Description {
            get {
                return ResourceManager.GetString("Activity_ExecutePowerShellCore_Property_CommandText_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command Text.
        /// </summary>
        public static string Activity_ExecutePowerShellCore_Property_CommandText_Name {
            get {
                return ResourceManager.GetString("Activity_ExecutePowerShellCore_Property_CommandText_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies to continue executing the remaining activities even if the current activity failed. Only boolean values (True, False) are supported..
        /// </summary>
        public static string Activity_ExecutePowerShellCore_Property_ContinueOnError_Description {
            get {
                return ResourceManager.GetString("Activity_ExecutePowerShellCore_Property_ContinueOnError_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue On Error.
        /// </summary>
        public static string Activity_ExecutePowerShellCore_Property_ContinueOnError_Name {
            get {
                return ResourceManager.GetString("Activity_ExecutePowerShellCore_Property_ContinueOnError_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A collection of PSObjects that are passed to the writer of the pipeline used to execute the command. Can be the output of another InvokePowerShellCore activity..
        /// </summary>
        public static string Activity_ExecutePowerShellCore_Property_Input_Description {
            get {
                return ResourceManager.GetString("Activity_ExecutePowerShellCore_Property_Input_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input.
        /// </summary>
        public static string Activity_ExecutePowerShellCore_Property_Input_Name {
            get {
                return ResourceManager.GetString("Activity_ExecutePowerShellCore_Property_Input_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies if the command text is a script..
        /// </summary>
        public static string Activity_ExecutePowerShellCore_Property_IsScript_Description {
            get {
                return ResourceManager.GetString("Activity_ExecutePowerShellCore_Property_IsScript_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IsScript.
        /// </summary>
        public static string Activity_ExecutePowerShellCore_Property_IsScript_Name {
            get {
                return ResourceManager.GetString("Activity_ExecutePowerShellCore_Property_IsScript_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A dictionary of PowerShell command parameters..
        /// </summary>
        public static string Activity_ExecutePowerShellCore_Property_Parameters_Description {
            get {
                return ResourceManager.GetString("Activity_ExecutePowerShellCore_Property_Parameters_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameters.
        /// </summary>
        public static string Activity_ExecutePowerShellCore_Property_Parameters_Name {
            get {
                return ResourceManager.GetString("Activity_ExecutePowerShellCore_Property_Parameters_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A dictionary of named objects that represent variables used within the current session of the command. A PowerShell command can retrieve information from IN and In/Out variables and can set Out variables..
        /// </summary>
        public static string Activity_ExecutePowerShellCore_Property_PowerShellVariables_Description {
            get {
                return ResourceManager.GetString("Activity_ExecutePowerShellCore_Property_PowerShellVariables_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PowerShell Variables.
        /// </summary>
        public static string Activity_ExecutePowerShellCore_Property_PowerShellVariables_Name {
            get {
                return ResourceManager.GetString("Activity_ExecutePowerShellCore_Property_PowerShellVariables_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invoke a PowerShell Core command.
        /// </summary>
        public static string Activity_InvokePowerShellCore_Description {
            get {
                return ResourceManager.GetString("Activity_InvokePowerShellCore_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invoke Power Shell Core.
        /// </summary>
        public static string Activity_InvokePowerShellCore_Name {
            get {
                return ResourceManager.GetString("Activity_InvokePowerShellCore_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The PowerShell command that is to be executed..
        /// </summary>
        public static string Activity_InvokePowerShellCore_Property_CommandText_Description {
            get {
                return ResourceManager.GetString("Activity_InvokePowerShellCore_Property_CommandText_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command Text.
        /// </summary>
        public static string Activity_InvokePowerShellCore_Property_CommandText_Name {
            get {
                return ResourceManager.GetString("Activity_InvokePowerShellCore_Property_CommandText_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies to continue executing the remaining activities even if the current activity failed. Only boolean values (True, False) are supported..
        /// </summary>
        public static string Activity_InvokePowerShellCore_Property_ContinueOnError_Description {
            get {
                return ResourceManager.GetString("Activity_InvokePowerShellCore_Property_ContinueOnError_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue On Error.
        /// </summary>
        public static string Activity_InvokePowerShellCore_Property_ContinueOnError_Name {
            get {
                return ResourceManager.GetString("Activity_InvokePowerShellCore_Property_ContinueOnError_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A collection of PSObjects that are passed to the writer of the pipeline used to execute the command. Can be the output of another InvokePowerShellCore activity..
        /// </summary>
        public static string Activity_InvokePowerShellCore_Property_Input_Description {
            get {
                return ResourceManager.GetString("Activity_InvokePowerShellCore_Property_Input_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input.
        /// </summary>
        public static string Activity_InvokePowerShellCore_Property_Input_Name {
            get {
                return ResourceManager.GetString("Activity_InvokePowerShellCore_Property_Input_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies if the command text is a script..
        /// </summary>
        public static string Activity_InvokePowerShellCore_Property_IsScript_Description {
            get {
                return ResourceManager.GetString("Activity_InvokePowerShellCore_Property_IsScript_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IsScript.
        /// </summary>
        public static string Activity_InvokePowerShellCore_Property_IsScript_Name {
            get {
                return ResourceManager.GetString("Activity_InvokePowerShellCore_Property_IsScript_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A collection of TypeArguments objects returned by the execution of the command. Can be used to pipe several InvokePowerShellCore activities..
        /// </summary>
        public static string Activity_InvokePowerShellCore_Property_Output_Description {
            get {
                return ResourceManager.GetString("Activity_InvokePowerShellCore_Property_Output_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output.
        /// </summary>
        public static string Activity_InvokePowerShellCore_Property_Output_Name {
            get {
                return ResourceManager.GetString("Activity_InvokePowerShellCore_Property_Output_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A dictionary of PowerShell command parameters..
        /// </summary>
        public static string Activity_InvokePowerShellCore_Property_Parameters_Description {
            get {
                return ResourceManager.GetString("Activity_InvokePowerShellCore_Property_Parameters_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameters.
        /// </summary>
        public static string Activity_InvokePowerShellCore_Property_Parameters_Name {
            get {
                return ResourceManager.GetString("Activity_InvokePowerShellCore_Property_Parameters_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A dictionary of named objects that represent variables used within the current session of the command. A PowerShell command can retrieve information from IN and In/Out variables and can set Out variables..
        /// </summary>
        public static string Activity_InvokePowerShellCore_Property_PowerShellVariables_Description {
            get {
                return ResourceManager.GetString("Activity_InvokePowerShellCore_Property_PowerShellVariables_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PowerShell Variables.
        /// </summary>
        public static string Activity_InvokePowerShellCore_Property_PowerShellVariables_Name {
            get {
                return ResourceManager.GetString("Activity_InvokePowerShellCore_Property_PowerShellVariables_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Others.
        /// </summary>
        public static string Category_Others_Name {
            get {
                return ResourceManager.GetString("Category_Others_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Principal.
        /// </summary>
        public static string Category_Principal_Name {
            get {
                return ResourceManager.GetString("Category_Principal_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Common.
        /// </summary>
        public static string Common {
            get {
                return ResourceManager.GetString("Common", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Common.
        /// </summary>
        public static string Common_Category {
            get {
                return ResourceManager.GetString("Common_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If set, continue executing the remaining activities even if the current activity has failed..
        /// </summary>
        public static string ContinueOnError_Description {
            get {
                return ResourceManager.GetString("ContinueOnError_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ContinueOnError.
        /// </summary>
        public static string ContinueOnError_DisplayName {
            get {
                return ResourceManager.GetString("ContinueOnError_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do.
        /// </summary>
        public static string Do {
            get {
                return ResourceManager.GetString("Do", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activities.Scripting.Powershell.
        /// </summary>
        public static string General_Category {
            get {
                return ResourceManager.GetString("General_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input.
        /// </summary>
        public static string Input {
            get {
                return ResourceManager.GetString("Input", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Misc.
        /// </summary>
        public static string Misc {
            get {
                return ResourceManager.GetString("Misc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output.
        /// </summary>
        public static string Output {
            get {
                return ResourceManager.GetString("Output", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PowerShell command errors:.
        /// </summary>
        public static string PowerShellExceptionMessage {
            get {
                return ResourceManager.GetString("PowerShellExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CommandText must be set before InvokePowerShell activity &apos;{0}&apos; can be used..
        /// </summary>
        public static string PowerShellRequiresCommandException {
            get {
                return ResourceManager.GetString("PowerShellRequiresCommandException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the amount of time (in milliseconds) to wait for the activity to run before an error is thrown. The default value is 60000 (1 minute)..
        /// </summary>
        public static string Timeout_Description {
            get {
                return ResourceManager.GetString("Timeout_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeout (milliseconds).
        /// </summary>
        public static string Timeout_DisplayName {
            get {
                return ResourceManager.GetString("Timeout_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The activity timed out and was canceled..
        /// </summary>
        public static string Timeout_Error {
            get {
                return ResourceManager.GetString("Timeout_Error", resourceCulture);
            }
        }
    }
}
